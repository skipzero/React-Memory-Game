{"version":3,"sources":["../../src/js/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(() => {\n// The back of the cards\nconst POKEBALL = 'http://vignette3.wikia.nocookie.net/youtubepoop/images/4/4c/Pokeball.png/revision/latest'\n\n// The front of the cards\nconst BULBASAUR = 'http://cdn.bulbagarden.net/upload/2/21/001Bulbasaur.png'\nconst CHARMANDER = 'http://cdn.bulbagarden.net/upload/thumb/7/73/004Charmander.png/600px-004Charmander.png'\nconst SQUIRTLE = 'http://cdn.bulbagarden.net/upload/thumb/3/39/007Squirtle.png/250px-007Squirtle.png'\nconst PIKACHU = 'http://cdn.bulbagarden.net/upload/0/0d/025Pikachu.png'\nconst JIGGLYPUFF = 'http://cdn.bulbagarden.net/upload/thumb/3/3e/039Jigglypuff.png/250px-039Jigglypuff.png'\nconst ABRA = 'http://cdn.bulbagarden.net/upload/6/62/063Abra.png'\nconst GYARADOS = 'http://cdn.bulbagarden.net/upload/4/41/130Gyarados.png'\nconst MEWTWO = 'http://cdn.bulbagarden.net/upload/thumb/7/78/150Mewtwo.png/250px-150Mewtwo.png'\n\n//  our monsterous array!\nlet pokeArray = 'BULBASAUR, CHARMANDER, SQUIRTLE, PIKACHU, JIGGLYPUFF, ABRA, GYARADOS, MEWTWO';\nconst arrCopy = pokeArray.slice();\n\npokeArray = pokeArray.toLowerCase().split(', ');\n\nconsole.log('COPY', arrCopy);\n\nclass Concentration extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.restart = this.restart.bind(this);\n\t\tthis.resetTime = null;\n\n\t\tthis.checkMatch = this.checkMatch.bind(this);\n\n\t\tthis.state = this.cleanState();\n\n\t\tthis.state.deck = this.shuffleDeck();\n\t}\n\n\tcleanState() {\n\t\treturn {\n\t\t\tdeck: this.shuffleDeck(),\n\t\t\tpairs: [],\n\t\t\tmoves: 0,\n\t\t\tselected: [],\n\t\t\tendMsg:  '',\n\t\t};\n\t}\n\n\tgameBoard() {\n\t\treturn (\n\t\t\t<div id='gameBoard'> {\n\t\t\t\t\tthis.state.deck.map((card, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tclassName={card}\n\t\t\t\t\t\t\t\thandleClick={this.clickHandler.bind(this, i)}\n\t\t\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\t\tisSelected={this.state.selected.includes(i)}\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tdidMatch={this.state.pairs.includes(i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}, this)\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tclickHandler(cid) {\n\t\t//  early return in case cards been selected this round or the timer is 'on'\n\t\tif(this.state.selected.includes(cid) || this.resetTime) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(this.state.selected.length >= 1) {\n\t\t\tthis.resetTime = setTimeout(() => {\n\t\t\t\tthis.checkMatch();\n\t\t\t}, 1500);\n\t\t}\n\n\t\tthis.state.selected.push(cid)\n\n    console.log(cid, 'PROPS', this.state.selected);\n\t\tthis.setState({\n\t\t\tselected: this.state.selected\n\t\t})\n\t}\n\n\tcheckMatch() {\n\t\tlet moves = this.state.moves;\n\t\tlet pairs = this.state.pairs;\n\n\t\tconst matchSelected = this.state.selected.map((id) => {\n\t\t\treturn this.state.deck[id];\n\t\t});\n\n\t\tif(matchSelected[0] === matchSelected[1]) {\n\t\t\tpairs = pairs.concat(this.state.selected);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tselected: [],\n\t\t\tmoves,\n\t\t\tpairs\n\t\t});\n\n\t\tthis.resetTime = null;\n\n\t\tif(this.state.pairs.length === 8) {\n\t\t\tthis.setState({\n\t\t\t\tendMsg: 'You got them all!! Let\\'s play again!!'\n\t\t\t});\n\n\t\t\tconst newGame = setTimeout(() => {\n\t\t\t\tthis.restart();\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst gameboard = this.gameBoard();\n  \treturn (\n\t\t\t<div>\n\t\t\t\t<div className='endMsg'>{ this.state.endMsg }</div>\n\t\t\t\t<div className='score'>\n\t\t\t\t\t<span>{this.state.pairs.length / 2}</span>\n\t\t\t\t</div>\n\t\t\t\t{gameboard}\n\t\t\t</div>\n\t\t);\n  }\n\n\t//  Randomly pick 4 of the 8 cards to make our deck...\n  pickCards() {\n    const deck = [];\n\t\tlet pokeArrayCopy = pokeArray.slice();\n\t\tlet i = 0;\n\n    while (i < 4) {\n\t\t\tlet j = 0;\n\t\t\tconst randomNumber = this.randomNumber(pokeArrayCopy);\n      const newCard = pokeArrayCopy.splice(randomNumber, 1)[0];\n\n\t\t  while (j < 2) {\n        deck.push(newCard);\n\t\t\t\tj++;\n      }\n\t\t\ti++;\n    }\n\t\treturn deck;\n  }\n\n\t//  Shuffle our cards after they're picked using the Fisher-Yates shuffle:\n  // https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\n  shuffleDeck() {\n    let deck = this.pickCards();\n\n    for(let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const tempVal = deck[i];\n      deck[i] = deck[j];\n      deck[j] = tempVal;\n    }\n    return deck;\n  }\n\n\trandomNumber(arr) {\n\t\tconst ourArray = arr;\n\t\tconst min = 0;\n\t\tconst max = ourArray.length - 1;  //  using length of our array so we never get a number out of range\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\n\t//  reset our game when all cards are matched... could be a reset button too...\n\trestart() {\n\t\tthis.setState(this.cleanState());\n\t}\n};\n\n//  Define our card class...\n//  Normally we'd separate this into it's own file\nclass Card extends React.Component {\n\trender() {\n\t\tconst classes = this.props.className;\n\t\tconst turned = this.props.isSelected ? 'card flipped' : 'card';\n\t\tconst toggleVisible = this.props.didMatch ? 'hidden' : 'visible';\n\n\t\tlet style = {\n\t\t\tvisibility: toggleVisible,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className='flip' id={this.props.id} onClick={this.props.handleClick.bind(this)}>\n\t\t\t\t<div className={turned} style={style}>\n\t\t\t\t\t<div className={`face back`}> </div>\n\t\t\t\t\t<div className={`face front ${this.props.className}`}> </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReact.render(<Concentration />, document.getElementById('container'));\n})();\n"]}